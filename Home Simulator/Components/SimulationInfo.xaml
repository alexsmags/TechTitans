<UserControl x:Class="Home_Simulator.Components.SimulationInfo"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Home_Simulator.Components"
             xmlns:convert="clr-namespace:Home_Simulator.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="650" d:DesignWidth="150">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="boolToVis"/>
        <convert:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <convert:NullToBoolConverter x:Key="NullToBoolConverter"/>

        <Style x:Key="AnimatedSliderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="15">
                            <Grid>
                                <Ellipse Name="toggleButtonEllipse" Width="20" Height="20" Fill="#beb5eb" Stroke="Black" StrokeThickness="1" HorizontalAlignment="Left" Margin="3"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="toggleButtonEllipse" Storyboard.TargetProperty="Margin" To="33,3,3,3" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="toggleButtonEllipse" Storyboard.TargetProperty="Margin" To="3,3,33,3" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="#beb5eb"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#D3D3D3"/>
                                <Setter TargetName="toggleButtonEllipse" Property="Fill" Value="#A9A9A9"/>
                                <Setter TargetName="toggleButtonEllipse" Property="Stroke" Value="#696969"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ButtonWithoutMouseOver">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </UserControl.Resources>

    <Border Background="#beb5eb" CornerRadius="10" BorderBrush="Black" BorderThickness="1">
        <Grid HorizontalAlignment="Center" VerticalAlignment="Stretch" Width="120" Margin="0,10,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <ToggleButton Style="{StaticResource AnimatedSliderToggleButtonStyle}" IsChecked="{Binding IsSimulationRunning}" Cursor="Hand" HorizontalAlignment="Center" Margin="5" BorderBrush="Black"    IsEnabled="{Binding CurrentUser, Converter={StaticResource NullToBoolConverter}}"/>
            <Border Grid.Row="1" Width="50" Height="50" BorderBrush="Black" BorderThickness="1" CornerRadius="5" Margin="5">
                <Image Source="{Binding CurrentUser.ProfileImage}" Stretch="UniformToFill"/>
            </Border>
            <TextBlock Grid.Row="2" Text="{Binding CurrentUser.Name, FallbackValue='Select a User'}" FontWeight="Bold" HorizontalAlignment="Center" Margin="5"/>
            <Button Command="{Binding ChangeUserCommand}"
                    Style="{StaticResource ButtonWithoutMouseOver}"
                    Grid.Row="2" 
                    Height="20" 
                    VerticalAlignment="Bottom" 
                    Margin="0,0,0,45" 
                    Background="Transparent"
                    Content="Change User" 
                    Foreground="White" 
                    BorderThickness="0"
                    Cursor="Hand" 
                    IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"/>
            <StackPanel Grid.Row="3" Margin="5">
                <TextBlock Text="Location:" FontWeight="Bold" HorizontalAlignment="Center"/>
                <TextBlock Text="{Binding CurrentLocation.Name, FallbackValue='Please select a room'}" HorizontalAlignment="Center"/>
                <Button 
                Command="{Binding ChangeUserLocationCommand}"
                Style="{StaticResource ButtonWithoutMouseOver}"
                Grid.Row="2" 
                Height="20" 
                VerticalAlignment="Bottom" 
                Margin="0,0,0,50" 
                Background="Transparent"
                Content="Change Location" 
                Foreground="White" 
                BorderThickness="0"
                Cursor="Hand"
                />
            </StackPanel>

            <StackPanel Orientation="Vertical" Grid.Row="4">
                <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Center">
                    <TextBlock Text="Temperature: "></TextBlock>
                    <TextBlock>
                        <TextBlock.Text>
                            <MultiBinding StringFormat="{}{0} °C">
                                <Binding Path="OutsideTemperature"/>
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>
                <Button 
      Command="{Binding ChangeTemperatureCommand}"
      Style="{StaticResource ButtonWithoutMouseOver}"
      Grid.Row="4" 
      Height="20" 
      VerticalAlignment="Bottom" 
      Background="Transparent"
      Content="Change Temperature" 
      Foreground="White" 
      BorderThickness="0"
      Cursor="Hand"
      IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
      />
                <Button 
       Command="{Binding LoadCSVTemperatureCommand}"
       Style="{StaticResource ButtonWithoutMouseOver}"
       Grid.Row="4" 
       Height="20" 
       VerticalAlignment="Bottom" 
       Background="Transparent"
       Content="Load Temperature" 
       Foreground="White" 
       BorderThickness="0"
       Cursor="Hand"
       IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
       />
            </StackPanel>
            <StackPanel Grid.Row="5">
                <TextBlock Grid.Row="5" Text="{Binding SimulationModel.FormattedSimulationDate}" Margin="5" FontWeight="Bold" HorizontalAlignment="Center"/>
                <TextBlock Grid.Row="5" Text="{Binding SimulationModel.SimulationTime}" Margin="5" FontWeight="Bold" HorizontalAlignment="Center"/>
            </StackPanel>
            <StackPanel Grid.Row="6">
                <TextBlock Text="Time speed" Margin="5" FontWeight="Bold" HorizontalAlignment="Center"/>
                <Slider TickPlacement="BottomRight" TickFrequency="10" IsSnapToTickEnabled="True" Minimum="1" Maximum="100" Width="120" HorizontalAlignment="Left" Margin="2,0,0,0" Value="{Binding SimulationModel.TimeSpeed, Mode=TwoWay}"/>
            </StackPanel>
        </Grid>

    </Border>
</UserControl>
