<UserControl x:Class="Home_Simulator.Components.ModuleTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Home_Simulator.Components"
             xmlns:converter="clr-namespace:Home_Simulator.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    
    <UserControl.Resources>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Background" Value="White"/>
        </Style>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="10, 4"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value="#beb5eb"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10">
                                <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="{TemplateBinding Padding}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="ButtonWithoutMouseOver">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource AncestorType=Button}}" Value="False">
                                                <Setter Property="Foreground" Value="Gray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AnimatedSliderToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="60"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" 
                     BorderBrush="{TemplateBinding BorderBrush}" 
                     BorderThickness="{TemplateBinding BorderThickness}" 
                     CornerRadius="15">
                            <Grid>
                                <Ellipse Name="toggleButtonEllipse" Width="20" Height="20" Fill="LightGray" Stroke="Black" StrokeThickness="1" HorizontalAlignment="Left" Margin="3"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" Value="White"/>
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="toggleButtonEllipse" Storyboard.TargetProperty="Margin" To="33,3,3,3" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <ThicknessAnimation Storyboard.TargetName="toggleButtonEllipse" Storyboard.TargetProperty="Margin" To="3,3,33,3" Duration="0:0:0.2"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="Background" Value="#beb5eb"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="#D3D3D3"/>
                                <Setter TargetName="toggleButtonEllipse" Property="Fill" Value="#A9A9A9"/>
                                <Setter TargetName="toggleButtonEllipse" Property="Stroke" Value="#696969"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <converter:BooleanToOnOffConverter x:Key="BooleanToOnOffConverter" />
        <converter:InverseBooleanConverter x:Key="InverseBooleanConverter" />
    </UserControl.Resources>
    
    <Grid>
        <TabControl Grid.Column="1" Margin="10" Background="#beb5eb" BorderBrush="Black">
            <TabItem Header="SHS">
                <Grid Margin="10">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Button 
                        x:Name="btnAddUser"
                        Height="40" 
                        Margin="0" 
                        Background="#958bc9" 
                        Content="Add User" 
                        Foreground="Black" 
                        FontWeight="Bold"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Cursor="Hand"
                        Grid.Row="0"
                        Command="{Binding AddUserCommand}"
                        IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
                        />
                    <Button 
                        x:Name="btnRemoveUser"
                        Height="40" 
                        Margin="0" 
                        Background="#958bc9" 
                        Content="Remove User" 
                        Foreground="Black" 
                        FontWeight="Bold"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Cursor="Hand"
                        Grid.Row="2"
                        Command="{Binding RemoveUserCommand}"
                        IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
                        />
                    <Button 
                        x:Name="btnEditUsers"
                        Height="40" 
                        Margin="0" 
                        Background="#958bc9" 
                        Content="Edit Users" 
                        Foreground="Black" 
                        FontWeight="Bold"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Cursor="Hand"
                        Grid.Row="4"
                        Command="{Binding EditUsersCommand}"
                        IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
                        />

                    <Button 
                        x:Name="btnChangeDateTime"
                        Height="40" 
                        Margin="0" 
                        Background="#958bc9" 
                        Content="Change Date/Time" 
                        Foreground="Black" 
                        FontWeight="Bold"
                        BorderThickness="1"
                        BorderBrush="Black"
                        Cursor="Hand"
                        Grid.Row="6"
                        Command="{Binding ChangeDateTimeCommand}"
                        IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"
                        />

                 

                </Grid>
            </TabItem>

            <TabItem Header="SHC">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Margin="5,5,5,0" Text="Rooms" FontWeight="Bold"/>

                    <ListBox Grid.Row="1" ItemsSource="{Binding Rooms}" Background="#958bc9">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <Expander Header="{Binding Name}">
                                    <StackPanel>
                                        <!-- ItemsControl for Lights -->
                                        <ItemsControl ItemsSource="{Binding Lights}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{Binding LightImage}" Width="20" Height="20" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                        <TextBlock Text="On/Off:" Margin="0,0,3,0"></TextBlock>
                                                        <CheckBox Content="{Binding Name}" IsChecked="{Binding On, Mode=OneWay}" Command="{Binding DataContext.ToggleLightCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}"  VerticalAlignment="Center" IsEnabled="{Binding UserHasAccess}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <!-- ItemsControl for Doors -->
                                        <ItemsControl ItemsSource="{Binding Doors}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{Binding DoorImage}" Width="20" Height="20" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                        <TextBlock Text="Open/Close:" Margin="0,0,3,0"></TextBlock>
                                                        <CheckBox Content="{Binding Name}" Command="{Binding DataContext.ToggleDoorCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" VerticalAlignment="Center" IsEnabled="{Binding DataContext.HasAccessToDoors, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                        <!-- ItemsControl for Windows -->
                                        <ItemsControl ItemsSource="{Binding Windows}">
                                            <ItemsControl.ItemTemplate>
                                                <DataTemplate>
                                                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding DataContext.HasAccessToWindows, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}">
                                                        <Image Source="{Binding WindowImage}" Width="20" Height="20" VerticalAlignment="Center" Margin="0,0,10,0"/>
                                                        <TextBlock Text="Open/Close:" Margin="0,0,3,0"></TextBlock>
                                                        <CheckBox  IsChecked="{Binding IsOpen, Mode=OneWay}" Command="{Binding DataContext.ToggleOpenCloseWindowCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" VerticalAlignment="Center" IsEnabled="{Binding IsBlocked, Converter={StaticResource InverseBooleanConverter}}"/>
                                                        <TextBlock Text="Block:" Margin="10,0,3,0"></TextBlock>
                                                        <CheckBox Command="{Binding DataContext.ToggleBlockUnblockWindowCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding}" VerticalAlignment="Center" IsEnabled="{Binding DataContext.HasAccessToWindows, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ItemsControl.ItemTemplate>
                                        </ItemsControl>
                                    </StackPanel>
                                </Expander>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    
                    <TextBlock Text="Automations" Grid.Row="2" Margin="0,20,0,0"></TextBlock>

                    <Expander Header="Lights" 
                              Grid.Row="3" 
                              Margin="0" 
                              Background="#958bc9" 
                              Foreground="Black">    
                        <ScrollViewer VerticalScrollBarVisibility="Auto" Background="#958bc9">
                            <ListBox ItemsSource="{Binding Rooms}" 
                                     Background="#958bc9"
                                     IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}">   
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Margin="5">
                                            <TextBlock Text="{Binding Name}" 
                                                       Foreground="Black"/>
                                            <CheckBox Content="Enable Automation" 
                                                      IsChecked="{Binding IsAutomationEnabled, Mode=TwoWay}" 

                                                      Margin="0,5,5,0" 
                                                      Foreground="Black"/>      
                                        </StackPanel>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Expander>



                    <TextBlock Grid.Row="4" Margin="5,5,5,0" Text="Open/close" FontWeight="Bold"/>

                    <Border Grid.Row="5" BorderBrush="#958bc9" BorderThickness="2" Padding="5">
                        <StackPanel Margin="0,4,0,0" Grid.Row="3">
                            <CheckBox x:Name="chkBackyard">Backyard</CheckBox>
                            <CheckBox x:Name="chkGarage">Garage</CheckBox>
                            <CheckBox x:Name="chkMain">Main</CheckBox>
                            <Button 
                                x:Name="btnToggle"
                                Content="All" 
                                Margin="3,8,0,0" 
                                Width="100" 
                                Background="Transparent" 
                                HorizontalAlignment="Left" 
                                FontWeight="Bold"
                                Click="btnToggle_Click">
                            </Button>
                        </StackPanel>
                    </Border>
              
                </Grid>
            </TabItem>


            <TabItem Header="SHP">

            </TabItem>
            
            <TabItem Header="SHH">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Orientation="Horizontal">
                        <TextBlock Text="Toggle SHH" VerticalAlignment="Center" Margin="10"></TextBlock>
                        <ToggleButton 
                             Height="30" 
                             Width="60"
                             Cursor="Hand" 
                             IsChecked="{Binding IsShhEnabled}" 
                             Margin="10" 
                             Padding="10" 
                             VerticalAlignment="Center" 
                             Style="{StaticResource AnimatedSliderToggleButtonStyle}"/>
                    </StackPanel>


                    <StackPanel Orientation="Horizontal" Grid.Row="1" Margin="10">
                        <TextBox x:Name="txtZoneName"
                     Width="200"
                     Height="20"
                     Margin="0,0,5,0"
                     VerticalAlignment="Center"
                     Text="{Binding NewZoneName, UpdateSourceTrigger=PropertyChanged}" />
                        <Button x:Name="btnAddZone" 
                    Content="Add Zone" 
                    Command="{Binding AddZoneCommand}" 
                    Margin="0,0,5,0"
                    Padding="10,0,10,0"
                    Background="#958bc9" 
                    Foreground="Black" 
                    BorderThickness="1"
                    BorderBrush="Black"
                    Height="20"
                    Cursor="Hand"
                    IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"/>

                        <Button x:Name="viewRooms" 
                                Content="View Rooms" 
                                Command="{Binding ViewRoomsCommand}" 
                                Margin="0,0,5,0"
                                Padding="10,0,10,0"
                                Background="#958bc9" 
                                Foreground="Black" 
                                BorderThickness="1"
                                BorderBrush="Black"
                                Height="20"
                                Cursor="Hand"/>
                    </StackPanel>

                    <Border BorderBrush="Black" BorderThickness="1" Grid.Row="2"  Margin="10" Padding="2" CornerRadius="5">

                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ListBox ItemsSource="{Binding Zones}" Margin="0,10,0,10"  SelectedItem="{Binding SelectedZone, Mode=TwoWay}" IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}" Background="Transparent" BorderThickness="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Expander Header="{Binding Name}" Foreground="Black" Expanded="Expander_Expanded">
                                            <StackPanel>
                                                <ListBox ItemsSource="{Binding Rooms}" Background="Transparent" BorderThickness="0">
                                                    <ListBox.ItemContainerStyle>
                                                        <Style TargetType="ListBoxItem">
                                                            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                                        </Style>
                                                    </ListBox.ItemContainerStyle>
                                                    <ListBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Grid.Column="0" Text="{Binding Name}" FontWeight="Bold" VerticalAlignment="Center"/>
                                                                <Button Grid.Column="1" Content="Remove"
                                                                Command="{Binding DataContext.RemoveRoomFromZoneCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                                CommandParameter="{Binding}"
                                                                Margin="0,5,5,5"
                                                                Padding="5"
                                                                Background="#D9534F"
                                                                Foreground="White"
                                                                FontWeight="Bold"
                                                                Height="30"
                                                                Cursor="Hand"
                                                                IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ListBox.ItemTemplate>
                                                </ListBox>

                                                <!-- New Section for Temperature Settings -->
                                                <TextBlock Text="Temperature Settings" FontWeight="Bold" Margin="5"/>
                                                <ItemsControl ItemsSource="{Binding TemperatureSettings}">
                                                    <ItemsControl.ItemTemplate>
                                                        <DataTemplate>
                                                            <Grid Margin="5">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                    <ColumnDefinition Width="*"/>
                                                                    <ColumnDefinition Width="Auto"/>
                                                                </Grid.ColumnDefinitions>
                                                                <TextBlock Text="{Binding newPeriodName}" Grid.Column="0" VerticalAlignment="Center" Margin="0,0,5,0"/>
                                                                <Slider Minimum="0" Maximum="30" Value="{Binding DesiredTemperature, Mode=TwoWay}" Grid.Column="1" Margin="0,0,5,0"/>
                                                                <TextBlock Text="{Binding NewDesiredTemperature, StringFormat='{}{0} °C'}" Grid.Column="2" VerticalAlignment="Center"/>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.ItemTemplate>
                                                </ItemsControl>

                                                <!-- Buttons to Add/Remove Temperature Period -->
                                                <StackPanel Margin="5" HorizontalAlignment="Left">
                                                    <Button Content="Add Period" Style="{StaticResource ButtonWithoutMouseOver}" Background="Transparent" BorderThickness="0" Cursor="Hand"  HorizontalAlignment="Left" Command="{Binding DataContext.AddTemperaturePeriodCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Margin="0,0,0,6" IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}" />
                                                    <Button Content="View/Remove Period(s)" Style="{StaticResource ButtonWithoutMouseOver}" Background="Transparent" BorderThickness="0" Cursor="Hand" Command="{Binding DataContext.RemoveTemperaturePeriodCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" IsEnabled="{Binding IsSimulationRunning, Converter={StaticResource InverseBooleanConverter}}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal" Margin="5">
                                                    <ComboBox x:Name="RoomComboBox"
                                                      Width="150"
                                                      Height="30"
                                                      ItemsSource="{Binding DataContext.AvailableRooms, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                      DisplayMemberPath="Name"
                                                      SelectedItem="{Binding SelectedRoomToAdd, Mode=TwoWay}"
                                                      GotFocus="ComboBox_GotFocus">
                                                        <ComboBox.Style>
                                                            <Style TargetType="ComboBox">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding DataContext.AvailableRooms.Count, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" Value="0">
                                                                        <Setter Property="IsEnabled" Value="False"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </ComboBox.Style>
                                                    </ComboBox>

                                                    <Button Content="Add Room"
                                                    Command="{Binding DataContext.AddRoomToZoneCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                    CommandParameter="{Binding SelectedItem, ElementName=RoomComboBox}"
                                                    Margin="5"
                                                    Padding="5"
                                                    Background="#4CAF50"
                                                    Foreground="White"
                                                    FontWeight="Bold"
                                                    Height="30"
                                                    Width="70"
                                                    BorderThickness="0"
                                                    Cursor="Hand" />
                                                </StackPanel>

                                                <Button Content="Remove Zone" 
                                                        Command="{Binding DataContext.RemoveZoneCommand, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" 
                                                        CommandParameter="{Binding}"
                                                        Margin="5"
                                                        Height="28"
                                                        VerticalAlignment="Top"
                                                        Background="#D9534F"
                                                        Foreground="White"
                                                        BorderThickness="0"
                                                        Cursor="Hand" />
                                            </StackPanel>
                                        </Expander>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </ScrollViewer>
                    </Border>



                    <Border Grid.Row="3" BorderBrush="Black" BorderThickness="1" Margin="10" Padding="10" CornerRadius="5">
                        <ScrollViewer  VerticalScrollBarVisibility="Auto">
                            <!-- Climate Control Section: Air Conditioner and Heater -->

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Air Conditioner Status:" VerticalAlignment="Center"/>
                                <StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Image Width="50" Height="50" Source="{Binding AirConditioner.ACImage}" Margin="10" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                    <ToggleButton Height="30" Width="60" Cursor="Hand" IsEnabled="{Binding IsShhEnabled}" Command="{Binding ToggleAcCommand}" IsChecked="{Binding AirConditioner.IsOn, Mode=OneWay}" Margin="10" Padding="10" VerticalAlignment="Center" Style="{StaticResource AnimatedSliderToggleButtonStyle}"/>
                                </StackPanel>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Desired Temperature:" VerticalAlignment="Center"/>
                                <Slider x:Name="setTemperature" Grid.Row="1" Grid.Column="1" Minimum="0" Maximum="30" IsSnapToTickEnabled="True" IsEnabled="{Binding IsShhEnabled}" Value="{Binding AirConditioner.DesiredTemperature, Mode=TwoWay}" Width="200" VerticalAlignment="Center" ToolTip="Adjust desired temperature" ValueChanged="setTemperature_ValueChanged"/>
                                <TextBlock x:Name="tempDisplay" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <Grid Grid.Row="3" Grid.ColumnSpan="2" Height="20"></Grid>

                                <TextBlock Grid.Row="4" Grid.Column="0" Text="Heating Status:" VerticalAlignment="Center"/>
                                <StackPanel Grid.Row="4" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right">
                                    <Image Width="50" Height="50" Source="{Binding Heater.HeaterImage}" Margin="10" VerticalAlignment="Top" HorizontalAlignment="Center"/>
                                    <ToggleButton Height="30" Width="60" Cursor="Hand" IsEnabled="{Binding IsShhEnabled}" Command="{Binding ToggleHeaterCommand}" IsChecked="{Binding Heater.IsOn, Mode=OneWay}" Margin="10" Padding="10" VerticalAlignment="Center" Style="{StaticResource AnimatedSliderToggleButtonStyle}"/>
                                </StackPanel>
                                <TextBlock Grid.Row="5" Grid.Column="0" Text="Desired Temperature:" VerticalAlignment="Center"/>
                                <Slider x:Name="setHeatingTemperature" Grid.Row="5" Grid.Column="1" Minimum="0" Maximum="30" IsSnapToTickEnabled="True" IsEnabled="{Binding IsShhEnabled}" Value="{Binding Heater.DesiredTemperature, Mode=TwoWay}" Width="200" VerticalAlignment="Center" ToolTip="Adjust desired temperature" ValueChanged="setHeaterTemperature_ValueChanged"/>
                                <TextBlock x:Name="heatingTempDisplay" Grid.Row="6" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Grid>

                        </ScrollViewer>
                    </Border>


                </Grid>
            </TabItem>




        </TabControl>

    </Grid>
</UserControl>
